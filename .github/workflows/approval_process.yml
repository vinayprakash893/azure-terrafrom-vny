name: Terrafrom Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
    
  Validating:
    name: Validating
    if: github.event_name == 'pull_request'
    needs: [Build]
    runs-on: ubuntu-latest
    # environment: 
    #   name: Development
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Deploy
      #   run: Validating!

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          #terraform_version: 1.1.7
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform code
        run: terraform validate
    
  # DeployStaging:
  #   name: Deploy to Staging 
  #   if: github.event.ref == 'refs/heads/main'
  #   needs: [Build]
  #   runs-on: ubuntu-latest
  #   environment: 
  #     name: Staging
  #     url: 'http://test.myapp.com'
  #   steps:
  #     - name: Deploy
  #       run: echo I am deploying! 
            
  DeployProd:
    name: Deploy to Production
    if: github.event.ref == 'refs/heads/main'
    needs: [Validating]
    runs-on: ubuntu-latest
    environment: 
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          #terraform_version: 1.1.7
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform code
        run: terraform validate

        #     # - name: Plan Terraform changes
  #     #   run: terraform plan
      
  #     # - name: Plan Terraform changes
  #     #   run: terraform apply --auto-approve
    