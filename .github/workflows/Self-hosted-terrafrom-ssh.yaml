name: Self-hosted-terrafrom-ssh
on:
  push:
  workflow_dispatch:

jobs:

  Deploy:
    runs-on:  self-hosted
    name: Deploy to Production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          #terraform_version: 1.1.7
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      # - name: SSH Known Hosts
      #   id: ssh-known-hosts
      #   uses: truemark/ssh-known-hosts-action@v1
      #   with:
      #     entries: ${{ secrets.KNOWN_HOST }}
      
      # - uses: LuisEnMarroquin/setup-ssh-action@v2.0.0
      #   with:
      #     ORIGIN: dev.azure.com # example.com || 8.8.8.8
      #     SSHKEY: ${{ secrets.SSH_PRIVATE_KEY }} # ----- BEGIN RSA PRIVATE KEY----- ...
      #     NAME: production
      #     PORT: 22 # 3000
      #     USER: cloud_user # admin
      #- run: ssh -T git@ssh.dev.azure.com || true
      # - run: ssh production ls --help

      - name: Setup SSH
        uses: MrSquaare/ssh-setup-action@v2
        with:
          host: ssh.dev.azure.com
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # - name: Clone GitHub repository
      #   run: git clone git@ssh.dev.azure.com:v3/vinaycloudtech/cer/tf-modules

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform code
        run: terraform validate

        #     # - name: Plan Terraform changes
  #     #   run: terraform plan
      
  #     # - name: Plan Terraform changes
  #     #   run: terraform apply --auto-approve